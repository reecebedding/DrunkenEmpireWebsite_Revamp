@model HoppsWebPlatform_Revamp.Models.APITableViewModel
       

<script type="text/javascript">

    function SubmitAPIEdit(apiNum) {
        $.ajax({
            url: "/api/apikey",
            type: "POST",
            dataType: "json",
            data: $("#apiEdit" + apiNum).serialize(),
            complete: function (result) {
                var responseSuccessCont = "<div class='validation-summary-valid-message'><ul>";
                var responseFailCont = "<div class='validation-summary-errors'><ul>";
                var contEnd = "</ul></div>";
                var responseDisplayMarkup = "";
                debugger;
                switch (result.status) {
                    
                    case 200:
                        responseDisplayMarkup = responseSuccessCont;
                        responseDisplayMarkup += "<li>API Successfully Updated</li>";
                        responseDisplayMarkup += contEnd;
                        debugger;
                        $.ajax({
                            type: "GET",
                            url: "/Account/GetAPITable/",
                            data: { pilotName: '@ViewBag.PilotName' },
                            success: function (jsReturnArgs) {
                                debugger;
                                

                                $("#APITableContainer").html(jsReturnArgs);
                            }                            
                        });
                        
                        break;                    
                    default:
                        responseDisplayMarkup = responseFailCont;
                        var ResultObj = JSON.parse(result.responseText);
                        var arrayOfErrors = ResultObj.ModelState[Object.keys(ResultObj.ModelState)[0]];
                        for (var i = 0; i < arrayOfErrors.length; i++) {
                            responseDisplayMarkup += "<li>" + arrayOfErrors[i] + "</li>";
                        }
                        responseDisplayMarkup += contEnd;
                        break;
                }
                $("#validation-summary-cont").html(responseDisplayMarkup);
            }
        });
        return false
    }

    function DisplayEditAPIForm(apiNum) {
        var keyID = $("#keyID-" + apiNum).text().trim();
        var vCode = $("#vCode-" + apiNum).text().trim();

        var editApiMarkup = "<div><form id='apiEdit" + apiNum + "'>";
        editApiMarkup += "KeyID: <input name='KeyID' style='width: 420px; margin-left: 3px;' type='text' value='" + keyID + "'></input> <br/>";
        editApiMarkup += "vCode: <input name='VCode' style='width: 420px;' type='text' value='" + vCode + "'></input> <br/>";
        editApiMarkup += "<input type='hidden' name='ID' value='" + keyID + "'></input>";
        editApiMarkup += "</form>";
        editApiMarkup += "<button style='float: left;' onclick='SubmitAPIEdit(" + apiNum + ");' value='" + apiNum + "'>Save</button>";
        editApiMarkup += "<div style='float: left;' id='validation-summary-cont'></div>";
        editApiMarkup += "</div>";

        $("#apiKey-" + apiNum).html(editApiMarkup);
    }
</script>

<div id="APITableContainer" class="singleColumn profileDiv">
    <h3>Current API Keys</h3>
    <table class="displayTable" align="center">
        <tr>
            <th>
                API Key
            </th>
            <th style="padding-left:50px;">
                Characters
            </th>
            @if ((bool)ViewBag.IsActiveUser)
            {
                <th>
                    Action
                </th>
            }
        </tr>
        @if (Model.existingAPIKeys.Count() > 0)
        {
            //IEnumerable<HoppsWebPlatform_Revamp.Models.ApiKey> uniqueAPIs = Model.First().Key.GroupBy(x => x.KeyID).Select(x => x.First());
            IEnumerable<HoppsWebPlatform_Revamp.Models.ApiKey> uniqueAPIs = Model.existingAPIKeys.GroupBy(x => x.KeyID).Select(x => x.First());
            int curApi = 0;
            foreach (HoppsWebPlatform_Revamp.Models.ApiKey uniqueAPI in uniqueAPIs)
            {
                <tr>
                    <td style="background-color: @if (uniqueAPI.Valid)
                                         { <text>#FFF</text> }
                                         else
                                         { <text>#F99</text> };" id="apiKey-@curApi">
                        KeyID:<span id='keyID-@curApi'>  @uniqueAPI.KeyID</span> <br />  vCode: <span id='vCode-@curApi'>@uniqueAPI.VCode </span>
                    </td>
                    <td>
                        <ol>
                            @foreach (HoppsWebPlatform_Revamp.Models.ApiKey pilotAPI in Model.existingAPIKeys.Where(x => x.KeyID == uniqueAPI.KeyID))
                            {
                                <li>@pilotAPI.PilotName</li>
                            }
                        </ol>
                    </td>
                    @if ((bool)ViewBag.IsActiveUser)
                    {
                        <td>
                            <div onclick="DisplayEditAPIForm(@curApi);">${EDIT ICON}</div>
                        </td>
                    }

                </tr>

                    curApi++;
            }
        }
        else
        {
            <tr><td>No API's Present</td><td></td></tr>
        }
    </table>
@using (Ajax.BeginForm("AddAPIKey", "Account", new AjaxOptions() { HttpMethod = "POST", UpdateTargetId = "APITableContainer" }))
{
    <div id="AddAPIContainer" class="singleColumn profileDiv">
        <h3>Add API Key</h3>
            @*    @Html.ValidationSummary(true)
                @Html.ValidationSummaryValidMessage();*@
        <p>
            Additional API keys can be created and maintained 
            <a class="inlineLink" href="https://community.eveonline.com/support/api-key/">here</a>.
        </p>
        <table class="addAPITable" align="center">
            <tr>
                <td class="editor-label">
                    @Html.LabelFor(m => m.newAPIKey.KeyID)
                </td>
                <td class="editor-field">
                    @Html.TextBoxFor(m => m.newAPIKey.KeyID)
                    @Html.ValidationMessageFor(m => m.newAPIKey.KeyID)
                </td>
                <td></td>
            </tr>
            <tr>
                <td class="editor-label">
                    @Html.LabelFor(m => m.newAPIKey.VCode)
                </td>
                <td class="editor-field">
                    @Html.TextBoxFor(m => m.newAPIKey.VCode, new{@class = "authenticationCode"})
                    @Html.ValidationMessageFor(m => m.newAPIKey.VCode)
                </td>
                <td>
                    <button class="buttonGreen" name="AddAPIFormSubmit">Submit</button>
                </td>
            </tr>

        </table>
    </div>
}
    </div>